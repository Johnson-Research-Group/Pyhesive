.. -*- mode: rst -*-
::
   
                ____          __                 _
               / __ \ __  __ / /_   ___   _____ (_)_   __ ___
              / /_/ // / / // __ \ / _ \ / ___// /| | / // _ \
             / ____// /_/ // / / //  __/(__  )/ / | |/ //  __/
            /_/     \__, //_/ /_/ \___//____//_/  |___/ \___/
                   /____/

    A lightweight, flexible python package to insert cohesive elements

====================================================================================================

Version 1.3 (in development)
============================

General
-------

- Add ``register_element_type()`` to let users register additional element types
- Add orphaned node check in ``Mesh.verify_cohesive_mesh()``
- Add ``Mesh.get_cell_data()``, ``Mesh.get_cells()``, ``Mesh.get_vertices()``, and ``Mesh.get_partitions()``
- ``Mesh.insert_elements()`` now takes an optional ``partitions`` kwarg, to insert elements around the given partition
- Deprecated the ``prune`` kwarg to ``Mesh.write_mesh()`` as it has been removed from meshio. Passing ``prune = True`` no longer does anything.
- Improved documentation

Version 1.2
===========

General
-------

- Drop python2 support library-wide
  
Version 1.1
===========

Mesh
----
- Add ``embed_partitions`` kwarg to ``Mesh.write_mesh()`` which embeds the partitions in
  the mesh as metadata

pyhesive-insert
---------------
- Added ``--version`` flag to ``pyhesive-insert``
- Changed ``-i``/``--input`` flags to be a positional argument
- Added ``-e``/``--embed-partitions`` to embed partitions into the mesh via metadata
  instead of creating cohesive elements

Version 1.0
===========
- Initial release
- Add support for triangular, tetrahedral and hexahedral elements
